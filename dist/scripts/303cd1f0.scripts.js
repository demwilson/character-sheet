"use strict";_.mixin({compactMap:function(list,iteratee,context){return _.compact(_.map(list,iteratee,context))}}),_.mixin(_.str.exports());var app=angular.module("charactersApp",["ngResource","ngRoute","ngSanitize"]);app.config(["$compileProvider","$routeProvider",function($compileProvider,$routeProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|file|blob):|data:image\//),$routeProvider.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",reloadOnSearch:!1}).when("/:characterId",{templateUrl:"views/character.html",controller:"CharacterCtrl",reloadOnSearch:!1}).otherwise({redirectTo:"/",reloadOnSearch:!1})}]),app.run([function(){FastClick.attach(document.body)}]),app.controller("MainCtrl",["$http","$scope","$window",function($http,$scope,$window){$window.document.title="Character Sheets",$http.get("characters/_list.json").success(function(data){$scope.characters=data})}]);var Character=function(data){function Bonus(data){data=defaultValue({value:0,type:"untyped",target:"none"},data),this.value=data.value,this.type=data.type,this.target=data.target,this.toString=function(){return _.sprintf("%+d%s%s",this.value)}}function BonusSet(data){data=defaultValue({name:"Unnamed",bonuses:[]},data),_.each(data.bonuses,function(bonus,index){this[index]=new Bonus(bonus)},data.bonuses),this.getTargetting=function(targetID){if(data.active===!1)return{};var found=_.filter(data.bonuses,function(bonus){return bonus.target===targetID});return _.isEmpty(found)?{}:_.max(found,function(bonus){return bonus.value})},this.getBonusString=function(targetID){var bonus=this.getTargetting(targetID);return _.isUndefined(bonus.value)||0===bonus.value?"":_.sprintf("%+d:%s",bonus.value,data.name.toLowerCase())}}function Score(data){this.name=data.name,this.id=_(this.name).underscored(),this.exemptTypes=[],this._exemptTypes=function(){_.each(data.exemptTypes,function(type){if(0===type.indexOf("-")){var toRemoveIndex=this.exemptTypes.indexOf(type.slice(1));_.isUndefined(toRemoveIndex)||this.exemptTypes.splice(toRemoveIndex,1)}else isValidBonusType(type,this.exemptTypes)&&this.exemptTypes.push(type)},this)},this.stats=data.stats,data.stat&&(this.stats=[data.stat]),this.getTotal=function(){var total;return _.isNumber(data.base)&&(total=data.base),total+=bonusHandler.getBonuses(this.id,this.exemptTypes)},this.getRoll=function(){return _.sprintf("%+d",this.getTotal())}}function AbilityScore(data){Score.call(this,data),this.exemptTypes=["armor","deflection","dodge","natural armor","shield"],this._exemptTypes(),this.getTotal=function(){return data.base+bonusHandler.getBonuses(this.id,this.exemptTypes)},this.getModifier=function(){return Math.floor((this.getTotal()-10)/2)},this.getRoll=function(){return _.sprintf("%+d",this.getModifier())}}function Attack(data){Score.call(this,data),this.exemptTypes=["armor","deflection","dodge","natural armor","shield"],this._exemptTypes(),this.getToHit=function(){var bab=defaultValue(0,data.bab),bonusTotal=this.getTotal();bonusTotal+=abilityScores.getModifiers(data.stats),bonusTotal+=bonusHandler.getBonuses(_.sprintf("%s-to-hit",this.id),this.exemptTypes),bonusTotal+=bonusHandler.getBonuses(_.sprintf("%s-to-hit",data.range),this.exemptTypes),bonusTotal+=bonusHandler.getBonuses(_.sprintf("%s-%s-to-hit",data.range,this.id),this.exemptTypes);var rolls=_.sprintf("%+d",bab+bonusTotal);if("natural"===data.type)return rolls;for(var itterative=bab-5;itterative>0;itterative-=5)rolls+=_.sprintf("/%+d",itterative+bonusTotal);return rolls},this.getDamage=function(){if(data.noDamage)return!1;var damageDice=defaultValue("",data.damageDice),total=defaultValue(0,data.damageBase);if(total+=abilityScores.getModifiers(data.damageStats),total+=bonusHandler.getBonuses(_.sprintf("%s-damage-mult",this.id),this.exemptTypes),total+=bonusHandler.getBonuses(_.sprintf("%s-damage-mult",data.range),this.exemptTypes),total+=bonusHandler.getBonuses(_.sprintf("%s-%s-damage-mult",data.range,this.id),this.exemptTypes),data.twoHanded&&(total+=Math.floor(.5*total)),total+=bonusHandler.getBonuses(_.sprintf("%s-damage",this.id),this.exemptTypes),total+=bonusHandler.getBonuses(_.sprintf("%s-damage",data.range),this.exemptTypes),total+=bonusHandler.getBonuses(_.sprintf("%s-%s-damage",data.range,this.id),this.exemptTypes),0===total)return damageDice;total=_.sprintf("%+d",total);var slashIndex=damageDice.indexOf("/");return slashIndex>-1?_(damageDice).insert(slashIndex,total):damageDice+total}}function Defense(data){Score.call(this,data),this.exemptTypes=["alchemical","circumstance","competence","inherent","morale","resistance"],this._exemptTypes(),data.base=defaultValue(10,data.base)+defaultValue(0,data.bab),data.touch=defaultValue({id:"touch-",stats:["dex"],exemptTypes:["armor","shield","natural armor"]},data.touch),data.flatfooted=defaultValue({id:"flat-footed-",stats:["str"],exemptTypes:[]},data.flatfooted),this.getTotal=function(){var total=data.base;return total+=abilityScores.getModifiers(data.stats),total+=bonusHandler.getBonuses(this.id,this.exemptTypes)},this._getSpecialDefense=function(specialData){var total=data.base,stats=_.flatten(_.intersection(data.stats,specialData.stats)),exemptTypes=_.flatten([this.exemptTypes,specialData.exemptTypes]);return total+=abilityScores.getModifiers(stats),total+=bonusHandler.getBonuses(this.id,exemptTypes),total+=bonusHandler.getBonuses(specialData.id+this.id,exemptTypes)},this.getTouch=function(){return this._getSpecialDefense(data.touch)},this.getFlatFooted=function(){return this._getSpecialDefense(data.flatfooted)},this.toString=function(){var strings=bonusHandler.getBonusesStrings(this.id);return _.each(data.stats,function(statName){var roll=abilityScores.getRoll(statName,":");"+0"!==roll&&strings.push(roll+":"+statName)}),_.isNumber(data.bab)&&strings.push(_.sprintf("%+d",data.bab)+":bab"),strings=_.sortBy(strings,function(string){var name=string.split(":")[1];return name}),_.each(strings,function(string,index){this[index]=string.replace(":"," ")},strings),strings.join(", ")}}function Save(data){Score.call(this,data),this.exemptTypes=["armor","circumstance","deflection","dodge","inherent","natural armor","shield","size"],this._exemptTypes(),this.getTotal=function(){var total=data.base;return total+=abilityScores.getModifiers(data.stats),total+=bonusHandler.getBonuses(this.id,this.exemptTypes),total+=bonusHandler.getBonuses("saves",this.exemptTypes)}}function Skill(data){Score.call(this,data),data.name.indexOf(" (")>-1&&(data.baseID=_.underscored(data.name.slice(0,data.name.indexOf(" (")))),this.getTotal=function(){var total=abilityScores.getModifiers(this.stats);return total+=bonusHandler.getBonuses(this.id,this.exemptTypes),data.baseID&&(total+=bonusHandler.getBonuses(data.baseID,this.exemptTypes)),data.ranks&&(total+=data.ranks),data.classSkill&&data.ranks>0&&(total+=3),total},this.isTrained=function(){return data.ranks>0}}function Caster(data){this.md=data.markdown,this.name=data.name,this.type=_.capitalize(data.type),this.level=_.sprintf("%+d",that.levels[data.name]),this.stats=data.stats,this.concentration=new Skill(defaultValue({name:_.sprintf("%s Concentration",data.name),ranks:that.levels[data.name],stats:data.stats||["cha"]},data.concentration)),this.spellResistance=new Skill(defaultValue({name:_.sprintf("%s Overcome Spell Resistance",data.name),ranks:that.levels[data.name],stats:data.stats||["cha"]}))}function makeLink(thing){return _.isString(thing)?thing:thing.link?_.sprintf("[%(name)s](%(link)s)",thing):thing.name}var that=this,isValidBonusType=function(type,exempt){var types=["alchemical","armor","circumstance","competence","deflection","dodge","enhancement","inherent","insight","luck","morale","natural armor","profane","racial","resistance","sacred","shield","size","trait","untyped"];return-1!==types.indexOf(type)&&-1===exempt.indexOf(type)},defaultValue=function(value,param){return _.isObject(value)?_.extend(value,param):_.isUndefined(param)?value:param},bonusHandler={data:_.map(data.bonuses,function(bonus){return new BonusSet(bonus)}),getBonuses:function(targetID,exempt){_.isArray(exempt)||(exempt=[]);var total=0,bonuses=_.map(this.data,function(bonusSet){return bonusSet.getTargetting(targetID)}),types=_.groupBy(bonuses,function(bonus){return bonus.type});return _.each(types,function(type,typeName){if(isValidBonusType(typeName,exempt))if(bonusHandler.canStack(typeName))_.each(type,function(bonus){total+=bonus.value});else{var values=_.map(type,function(bonus){return bonus.value>=0?bonus.value:0});_.isEmpty(values)||(total+=_.max(values)),values=_.map(type,function(bonus){return bonus.value<0?bonus.value:0}),total+=_.reduce(values,function(sum,x){return sum+x},0)}}),total},getBonusesStrings:function(targetID){return _.compactMap(this.data,function(bonusSet){return bonusSet.getBonusString(targetID)})},canStack:function(type){var stackable=["circumstance","dodge","racial","untyped"];return stackable.indexOf(type)>-1}},info=data.info;this.id=_(info.name).underscored(),this.portrait=info.portrait,this.name=info.name,info.cr&&info.mr?this.difficulty=_.sprintf("CR %d / MR %d",info.cr,info.mr):info.cr?this.difficulty=_.sprintf("CR %d",info.cr):info.mr&&(this.difficulty=_.sprintf("MR %d",info.mr)),this.levels=info.levels,info.templates=defaultValue([],info.templates),info.race=defaultValue("",info.race),info.levels=_.map(info.levels,function(level,className){return _.sprintf("%s %d",_(className).titleize(),level)}).join(", "),this.infoText=[_.join(" ",info.templates.join(" "),info.race,info.levels),_.join(" ",info.alignment,info.size,info.type)],this.senses=info.senses.join(", "),info.initiative=info.initiative||{},this.initiative=new Skill({name:"Initiative",base:info.initiative.base,stats:info.initiative.stats||["dex"]}),this.hp=_.sprintf("%d (%s)",info.hp,info.hd),info.hpSpecials&&(this.hp+=_.sprintf("; %s",info.hpSpecials.join(", "))),this.feats=_.map(data.feats,makeLink).join(", "),this.traits=_.map(data.traits,makeLink).join(", "),this.languages=data.info.languages.join(", "),this.speed=info.speed,this.space=info.space,this.reach=info.reach,this.specials=_.compactMap(data.specials,function(special){return special.indexOf("@")>0?null:special}),this.gear=data.gear;var abilityScores={str:new AbilityScore({name:"Strength",base:data.stats.scores.str}),dex:new AbilityScore({name:"Dexterity",base:data.stats.scores.dex}),con:new AbilityScore({name:"Constitution",base:data.stats.scores.con}),"int":new AbilityScore({name:"Intelligence",base:data.stats.scores.int}),wis:new AbilityScore({name:"Wisdom",base:data.stats.scores.wis}),cha:new AbilityScore({name:"Charisma",base:data.stats.scores.cha})};abilityScores.getModifier=function(scoreID){return this[scoreID].getModifier()},abilityScores.getRoll=function(scoreID){return this[scoreID].getRoll()},abilityScores.getModifiers=function(scoreIDs){var modifiers=[];return _.each(scoreIDs,function(scoreID,index){this[index]=abilityScores.getModifier(scoreID)},modifiers),_.reduce(modifiers,function(a,b){return a+b},0)},this.abilityScores=function(){return[abilityScores.str,abilityScores.dex,abilityScores.con,abilityScores.int,abilityScores.wis,abilityScores.cha]},this.bab=new Attack({name:"Base Attack Bonus",base:data.stats.bab}),this.cmb=new Attack(defaultValue({name:"Combat Maneuver Bonus",bab:this.bab.getTotal(),base:0,stats:["str"]})),this.meleeAttacks=_.map(data.attacks.melee,function(attack){return new Attack(defaultValue({range:"melee",type:"weapon",bab:that.bab.getTotal(),base:0,stats:["str"],damageStats:["str"]},attack))}),this.rangedAttacks=_.map(data.attacks.ranged,function(attack){return new Attack(defaultValue({range:"ranged",type:"weapon",bab:that.bab.getTotal(),base:0,stats:["dex"]},attack))}),this.spells=_.map(data.spells,function(caster){return new Caster(caster)});var defense=data.defense;this.ac=new Defense(defaultValue({name:"Armor Class",stats:["dex"],exemptTypes:[]},defense.ac)),this.cmd=new Defense(defaultValue({name:"Combat Maneuver Defense",stats:["str","dex"],bab:this.bab.getTotal(),exemptTypes:["armor","shield","natural armor"]},defense.cmd)),this.saves={fortitude:new Save(defaultValue({name:"Fortitude",stats:["con"],base:0},data.defense.fortitude)),reflex:new Save(defaultValue({name:"Reflex",stats:["dex"],base:0},data.defense.reflex)),will:new Save(defaultValue({name:"Will",stats:["wis"],base:0},data.defense.will))},this.specialDefenses="",defense.dr&&(this.specialDefenses+=_.sprintf("**Damage Reduction** %s;",defense.dr)),defense.immune&&(this.specialDefenses+=_.sprintf("**Immune** %s;",defense.immune)),defense.resist&&(this.specialDefenses+=_.sprintf("**Resist** %s;",defense.resist)),defense.sr&&(this.specialDefenses+=_.sprintf("**Spell Resistance** %s;",defense.sr)),this.specialDefenses=_.trim(this.specialDefenses,";"),this.otherDefenses=defaultValue([],defense.otherDefenses).join(", "),_.each(data.skills,function(skill,skillIndex){this[skillIndex]=new Skill(skill)},data.skills),this.skills={},this.skills.trained=_.filter(data.skills,function(skill){return skill.isTrained()}),this.skills.untrained=_.filter(data.skills,function(skill){return!skill.isTrained()}),this.skills.get=function(skillID){var trained=_.findWhere(this.trained,{id:skillID}),untrained=_.findWhere(this.untrained,{id:skillID});return trained||untrained},this.pf={level:function(className,factor){return factor=factor||1,Math.floor(that.levels[className]*factor)},modifier:function(stat){return abilityScores.getModifier(stat)},spellDC:function(className,level){var caster=_.findWhere(that.spells,function(caster){return caster.name===className});return _.sprintf("DC %d",10+level+abilityScores.getModifiers(caster.stats))},classDC:function(className,stat,factor,min){factor=factor||.5,min=min||1;var classLevel=Math.floor(that.levels[className]*factor)||min;return _.sprintf("DC %d",10+classLevel+abilityScores.getModifier(stat))}}};app.controller("CharacterCtrl",["$http","$routeParams","$scope","$window",function($http,$routeParams,$scope,$window){$scope.Math=Math,$scope.characters=[],$http.get("characters/"+$routeParams.characterId+"/_data.json").success(function(data){_.every(data,function(characterData,index){$scope.characters[index]=new Character(characterData)}),$window.document.title=$scope.characters[0].name+" - Character Sheet"})}]),marked.setOptions({renderer:new marked.Renderer,gfm:!0,tables:!0,breaks:!1,pedantic:!1,smartLists:!0,smartypants:!1}),app.directive("md",["$compile","$http","$routeParams",function($compile,$http,$routeParams){return{restrict:"E",transclude:!0,scope:{pf:"=",md:"="},templateUrl:"views/directives/md.html",link:function(scope,elem){function parse(data,isText){var markdown=data,pre=[{re:/\{\{/g,text:"`<ng-bind>"},{re:/\}\}/g,text:"</ng-bind>`"}];angular.forEach(pre,function(r){markdown=markdown.replace(r.re,r.text)});var html=marked(markdown),post=[{re:/<code>&lt;ng-bind&gt;/g,text:"{{"},{re:/&lt;\/ng-bind&gt;<\/code>/g,text:"}}"},{re:/unprepared/g,text:'<span class="unprepared">unprepared</span>'},{re:/\^([^\^]*)\^/g,text:"<sup>$1</sup>"},{re:/\$([^\$]*)\$/g,text:"<small>$1</small>"},{re:/\@([^\@]*)\@/g,text:"<roll>$1</roll>"},{re:/<a/g,text:'<a target="_blank"'},{re:/target="_blank" href="#/g,text:'href="#/'+$routeParams.characterId+"#"},{re:/:d20:/g,text:"http://www.d20pfsrd.com/"},{re:/:d20-spell:([a-z])/g,text:"http://www.d20pfsrd.com/magic/all-spells/$1/$1"},{re:/:d20-feat-([^\:]*):/g,text:"http://www.d20pfsrd.com/feats/$1-feats/"},{re:/:d20-trait-([^\:]*):/g,text:"http://www.d20pfsrd.com/traits/$1-traits/"},{re:/:d20-wop-effect:/g,text:"http://www.d20pfsrd.com/magic/variant-magic-rules/words-of-power/effect-words/"},{re:/:d20-wop-meta:/g,text:"http://www.d20pfsrd.com/magic/variant-magic-rules/words-of-power/meta-words/"},{re:/:d20-wop-target:/g,text:"http://www.d20pfsrd.com/magic/variant-magic-rules/words-of-power/target-words/"},{re:/:d20-special-abilities:/g,text:"http://www.d20pfsrd.com/gamemastering/special-abilities#TOC-"},{re:/:d20-creature-types:/g,text:"http://www.d20pfsrd.com/bestiary/rules-for-monsters/creature-types#TOC-"},{re:/:d20-universal-monster-rules:/g,text:"http://www.d20pfsrd.com/bestiary/rules-for-monsters/universal-monster-rules#TOC-"},{re:/:nethys-([^\:]*):/g,text:"http://www.archivesofnethys.com/$1Display.aspx?ItemName="},{re:/:prd-spell-crb:([a-zA-Z]+)/g,text:"http://paizo.com/pathfinderRPG/prd/spells/$1.html"},{re:/:prd-spell-apg:([a-zA-Z]+)/g,text:"http://paizo.com/pathfinderRPG/prd/advanced/spells/$1.html"},{re:/:prd-spell-uc:([a-zA-Z]+)/g,text:"http://paizo.com/pathfinderRPG/prd/ultimateCombat/spells/$1.html"},{re:/:prd-spell-um:([a-zA-Z]+)/g,text:"http://paizo.com/pathfinderRPG/prd/ultimateMagic/spells/$1.html"}];isText===!0?post=post.concat([{re:/<p/g,text:"<span"},{re:/<\/p>/g,text:"</span>"}]):html='<div class="no-break">'+html+"</div>",angular.forEach(post,function(r){html=html.replace(r.re,r.text)});var el=angular.element(html);$compile(el)(scope),elem.prepend(el)}if(void 0!==scope.md)if(scope.Math=Math,_.isString(scope.md)||scope.md.toString(),-1!==scope.md.indexOf(".md")){if(-1===scope.md.indexOf("@")){var mdUrl="characters/"+$routeParams.characterId+"/"+scope.md;$http.get(mdUrl).success(parse)}}else scope.md&&parse(scope.md,!0)}}}]);